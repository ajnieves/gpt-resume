{"ast":null,"code":"var _jsxFileName = \"C:\\\\resume-gpt\\\\gpt-resume\\\\client\\\\src\\\\SideMenu.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideMenu = _ref => {\n  let {\n    clearChat,\n    currentModel,\n    setCurrentModel,\n    models,\n    setTemperature,\n    temperature\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidemenu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-menu-button\",\n      onClick: clearChat,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83D\\uDCDD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 9\n      }, this), \"Create Bullet Points\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"models\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"side-label\",\n        children: \"Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        // active if model is select is currentModel\n        value: currentModel,\n        className: \"select-models\",\n        onChange: e => {\n          setCurrentModel(e.target.value);\n        },\n        children: models && models.length ? models.map((model, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: model.id,\n          children: model.id\n        }, model.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text-davinci-003\",\n          children: \"text-davinci-003\"\n        }, \"text-davinci-003\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Smart - Davinci\",\n        onClick: () => setCurrentModel(\"text-davinci-003\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Code - Crushman\",\n        onClick: () => setCurrentModel(\"code-crushman-001\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        children: \"The model parameter controls the engine used to generate the response. Davinci produces best results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"side-label\",\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"select-models\",\n        type: \"number\",\n        onChange: e => setTemperature(e.target.value),\n        min: \"0\",\n        max: \"1\",\n        step: \"0.1\",\n        value: temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"0 - Logical\",\n        onClick: () => setTemperature(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"0.5 - Balanced\",\n        onClick: () => setTemperature(0.5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"1 - Creative\",\n        onClick: () => setTemperature(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info\",\n        children: \"The temperature parameter controls the randomness of the model. 0 is the most logical, 1 is the most creative.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 1\n  }, this);\n};\n_c = SideMenu;\nconst Button = _ref2 => {\n  let {\n    onClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-picker\",\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n_c2 = Button;\nexport default SideMenu;\nvar _c, _c2;\n$RefreshReg$(_c, \"SideMenu\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["SideMenu","clearChat","currentModel","setCurrentModel","models","setTemperature","temperature","e","target","value","length","map","model","index","id","Button","onClick","text"],"sources":["C:/resume-gpt/gpt-resume/client/src/SideMenu.js"],"sourcesContent":["const SideMenu = ({ clearChat, currentModel, setCurrentModel, models, setTemperature, temperature }) => \r\n<aside className=\"sidemenu\">\r\n      <div className=\"side-menu-button\" onClick={clearChat}>\r\n        <span>üìù</span>\r\n        Create Bullet Points\r\n      </div>\r\n      <div className=\"models\">\r\n      <label className=\"side-label\">Model</label>\r\n        <select \r\n          // active if model is select is currentModel\r\n          value={currentModel}\r\n          className=\"select-models\"\r\n          onChange={(e)=>{\r\n          setCurrentModel(e.target.value)\r\n        }}>\r\n          {models && models.length ? models.map((model, index) => (\r\n            <option \r\n              key={model.id} \r\n              value={model.id}>{model.id}</option>\r\n          )) :  <option \r\n                  key={\"text-davinci-003\"} \r\n                  value={\"text-davinci-003\"}>{\"text-davinci-003\"}</option>}\r\n        </select>\r\n        <Button \r\n          text=\"Smart - Davinci\" \r\n          onClick={()=>setCurrentModel(\"text-davinci-003\")} />\r\n        <Button \r\n          text=\"Code - Crushman\" \r\n          onClick={()=>setCurrentModel(\"code-crushman-001\")} />\r\n        <span className=\"info\">\r\n          The model parameter controls the engine used to generate the response. Davinci produces best results.\r\n         </span>\r\n        <label className=\"side-label\" >Temperature</label>\r\n        <input \r\n          className=\"select-models\" \r\n          type=\"number\" \r\n          onChange={(e)=> setTemperature(e.target.value)}\r\n          min=\"0\" \r\n          max=\"1\" \r\n          step=\"0.1\"\r\n          value={temperature}\r\n         />\r\n         <Button \r\n          text=\"0 - Logical\" \r\n          onClick={()=>setTemperature(0)} />\r\n         <Button \r\n          text=\"0.5 - Balanced\" \r\n          onClick={()=>setTemperature(0.5)} />\r\n         <Button \r\n          text=\"1 - Creative\" \r\n          onClick={()=>setTemperature(1)} />\r\n         <span className=\"info\">\r\n          The temperature parameter controls the randomness of the model. 0 is the most logical, 1 is the most creative.\r\n         </span>\r\n      </div>\r\n    </aside>\r\n\r\nconst Button = ({ onClick, text }) =>\r\n  <div \r\n    className=\"button-picker\" \r\n    onClick={onClick}>\r\n    {text}\r\n  </div>\r\n\r\nexport default SideMenu"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}