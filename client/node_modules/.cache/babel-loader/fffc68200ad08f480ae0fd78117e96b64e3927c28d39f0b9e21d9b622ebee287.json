{"ast":null,"code":"var _jsxFileName = \"C:\\\\resume-gpt\\\\gpt-resume\\\\client\\\\src\\\\ChatBox.js\";\nimport OpenAISVGLogo from './OpenAISVGLogo';\n\n// Primary Chat Window\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = _ref => {\n  let {\n    clearChat,\n    currentModel,\n    setCurrentModel,\n    models,\n    setTemperature,\n    temperature,\n    handleSubmit,\n    chatInput,\n    chatInput1,\n    setChatInput,\n    setChatInput1,\n    chatLog\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-log\",\n      children: chatLog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-holder\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          rows: \"1\",\n          value: chatInput,\n          onChange: e => setChatInput(e.target.value),\n          className: \"chat-input-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-holder2\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          rows: \"2\",\n          value: chatInput,\n          onChange: e => setChatInput(e.target.value),\n          className: \"chat-input-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          type: \"submit\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n// Individual Chat Message\n_c = ChatBox;\nconst ChatMessage = _ref2 => {\n  let {\n    message\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user === \"gpt\" && \"chatgpt\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${message.user === \"gpt\" && \"chatgpt\"}`,\n        children: message.user === \"gpt\" ? /*#__PURE__*/_jsxDEV(OpenAISVGLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default ChatBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBox\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["OpenAISVGLogo","ChatBox","clearChat","currentModel","setCurrentModel","models","setTemperature","temperature","handleSubmit","chatInput","chatInput1","setChatInput","setChatInput1","chatLog","map","message","index","e","target","value","ChatMessage","user"],"sources":["C:/resume-gpt/gpt-resume/client/src/ChatBox.js"],"sourcesContent":["import OpenAISVGLogo from './OpenAISVGLogo'\r\n\r\n// Primary Chat Window\r\nconst ChatBox = ({clearChat, currentModel, setCurrentModel, models, setTemperature, temperature, handleSubmit, chatInput, chatInput1, setChatInput, setChatInput1, chatLog}) =>\r\n  <section className=\"chatbox\">\r\n      <div className=\"chat-log\">\r\n        {chatLog.map((message, index) => (\r\n          <ChatMessage key={index} message={message} />\r\n        ))}\r\n      </div>\r\n        <div className=\"chat-input-holder\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n          <input \r\n          rows=\"1\"\r\n          value={chatInput}\r\n          onChange={(e)=> setChatInput(e.target.value)}\r\n          className=\"chat-input-textarea\" ></input>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"chat-input-holder2\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n          <input \r\n          rows=\"2\"\r\n          value={chatInput}\r\n          onChange={(e)=> setChatInput(e.target.value)}\r\n          className=\"chat-input-textarea\" ></input>\r\n          <button className=\"submit\" type=\"submit\">Generate</button>\r\n          </form>\r\n        </div>\r\n\r\n      </section>\r\n\r\n// Individual Chat Message\r\nconst ChatMessage = ({ message }) => {\r\n  return (\r\n    <div className={`chat-message ${message.user === \"gpt\" && \"chatgpt\"}`}>\r\n    <div className=\"chat-message-center\">\r\n      <div className={`avatar ${message.user === \"gpt\" && \"chatgpt\"}`}>\r\n        {message.user === \"gpt\" ? <OpenAISVGLogo /> : <div>You</div>}\r\n      </div>\r\n      <div className=\"message\">\r\n        {message.message}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ChatBox"],"mappings":";AAAA,OAAOA,aAAa,MAAM,iBAAiB;;AAE3C;AAAA;AACA,MAAMC,OAAO,GAAG;EAAA,IAAC;IAACC,SAAS;IAAEC,YAAY;IAAEC,eAAe;IAAEC,MAAM;IAAEC,cAAc;IAAEC,WAAW;IAAEC,YAAY;IAAEC,SAAS;IAAEC,UAAU;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAO,CAAC;EAAA,oBACzK;IAAS,SAAS,EAAC,SAAS;IAAA,wBACxB;MAAK,SAAS,EAAC,UAAU;MAAA,UACtBA,OAAO,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1B,QAAC,WAAW;QAAa,OAAO,EAAED;MAAQ,GAAxBC,KAAK;QAAA;QAAA;QAAA;MAAA,QACxB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACJ;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBACpC;QAAM,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAER,YAAa;QAAA,uBAC1C;UACA,IAAI,EAAC,GAAG;UACR,KAAK,EAAEC,SAAU;UACjB,QAAQ,EAAGQ,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC7C,SAAS,EAAC;QAAqB;UAAA;UAAA;UAAA;QAAA;MAAU;QAAA;QAAA;QAAA;MAAA;IAClC;MAAA;MAAA;MAAA;IAAA,QACH,eAEN;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBACrC;QAAM,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAEX,YAAa;QAAA,wBAC1C;UACA,IAAI,EAAC,GAAG;UACR,KAAK,EAAEC,SAAU;UACjB,QAAQ,EAAGQ,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAC7C,SAAS,EAAC;QAAqB;UAAA;UAAA;UAAA;QAAA,QAAU,eACzC;UAAQ,SAAS,EAAC,QAAQ;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACnD;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEE;AAAA;;AAEhB;AAAA,KA9BMlB,OAAO;AA+Bb,MAAMmB,WAAW,GAAG,SAAiB;EAAA,IAAhB;IAAEL;EAAQ,CAAC;EAC9B,oBACE;IAAK,SAAS,EAAG,gBAAeA,OAAO,CAACM,IAAI,KAAK,KAAK,IAAI,SAAU,EAAE;IAAA,uBACtE;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAClC;QAAK,SAAS,EAAG,UAASN,OAAO,CAACM,IAAI,KAAK,KAAK,IAAI,SAAU,EAAE;QAAA,UAC7DN,OAAO,CAACM,IAAI,KAAK,KAAK,gBAAG,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAG,gBAAG;UAAA,UAAK;QAAG;UAAA;UAAA;UAAA;QAAA;MAAM;QAAA;QAAA;QAAA;MAAA,QACxD,eACN;QAAK,SAAS,EAAC,SAAS;QAAA,UACrBN,OAAO,CAACA;MAAO;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAER,CAAC;AAAA,MAbKK,WAAW;AAejB,eAAenB,OAAO;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}